{"version":3,"names":["_animation","require","_defineProperty","obj","key","value","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","supportedProps","SharedTransition","constructor","createInstance","custom","animationFactory","build","animationDuration","defaultDuration","values","animations","initialValues","includes","Error","propName","matrix","targetTransformMatrix","transformMatrix","withTiming","duration","keyToTargetValue","charAt","toUpperCase","slice","currentTransformMatrix","keyToCurrentValue","exports","DefaultSharedTransition"],"sources":["index.ts"],"sourcesContent":["import { withTiming } from '../../animation';\nimport {\n  ILayoutAnimationBuilder,\n  LayoutAnimationFunction,\n  LayoutAnimationsValues,\n} from '../animationBuilder/commonTypes';\nimport { StyleProps } from '../../commonTypes';\n\nconst supportedProps = ['width', 'height', 'originX', 'originY', 'transform'];\n\ntype AnimationFactoryType = (values: LayoutAnimationsValues) => StyleProps;\n\nexport class SharedTransition implements ILayoutAnimationBuilder {\n  animationFactory: AnimationFactoryType | null = null;\n  defaultDuration = 500;\n\n  static createInstance(): SharedTransition {\n    return new SharedTransition();\n  }\n\n  static custom(animationFactory: AnimationFactoryType): SharedTransition {\n    return this.createInstance().custom(animationFactory);\n  }\n\n  custom(animationFactory: AnimationFactoryType): SharedTransition {\n    this.animationFactory = animationFactory;\n    return this;\n  }\n\n  static build(): LayoutAnimationFunction {\n    return this.createInstance().build();\n  }\n\n  build(): LayoutAnimationFunction {\n    const animationFactory = this.animationFactory;\n    const animationDuration = this.defaultDuration;\n    return (values: LayoutAnimationsValues) => {\n      'worklet';\n      let animations: {\n        [key: string]: any;\n      } = {};\n      const initialValues: {\n        [key: string]: any;\n      } = {};\n\n      if (animationFactory) {\n        animations = animationFactory(values);\n        for (const key in animations) {\n          if (!supportedProps.includes(key)) {\n            throw Error(`The prop '${key}' is not supported yet.`);\n          }\n        }\n      } else {\n        for (const propName of supportedProps) {\n          if (propName === 'transform') {\n            const matrix = values.targetTransformMatrix;\n            animations.transformMatrix = withTiming(matrix, {\n              // native screen transition takes around 500ms\n              duration: animationDuration,\n            });\n          } else {\n            const keyToTargetValue =\n              'target' + propName.charAt(0).toUpperCase() + propName.slice(1);\n            animations[propName] = withTiming(values[keyToTargetValue], {\n              // native screen transition takes around 500ms\n              duration: animationDuration,\n            });\n          }\n        }\n      }\n\n      for (const propName in animations) {\n        if (propName === 'transform') {\n          initialValues.transformMatrix = values.currentTransformMatrix;\n        } else {\n          const keyToCurrentValue =\n            'current' + propName.charAt(0).toUpperCase() + propName.slice(1);\n          initialValues[propName] = values[keyToCurrentValue];\n        }\n      }\n\n      return { initialValues, animations };\n    };\n  }\n}\n\nexport const DefaultSharedTransition = SharedTransition;\n"],"mappings":"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"}