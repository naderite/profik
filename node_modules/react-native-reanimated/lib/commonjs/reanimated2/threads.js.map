{"version":3,"names":["_NativeReanimated","_interopRequireDefault","require","_PlatformChecker","_shareables","obj","__esModule","default","IS_JEST","isJest","IS_WEB","shouldBeUseWeb","_runOnUIQueue","setupMicrotasks","microtasksQueue","isExecutingMicrotasksQueue","global","queueMicrotask","callback","push","__callMicrotasks","index","length","_maybeFlushUIUpdatesQueue","callMicrotasksOnUIThread","callMicrotasks","exports","runOnUI","worklet","__DEV__","__workletHash","undefined","Error","_len","arguments","args","Array","_key","NativeReanimatedModule","scheduleOnUI","makeShareableCloneRecursive","queue","forEach","_ref","runOnUIImmediately","_len2","_key2","e","runOnJS","fun","__remoteFunction","_WORKLET","_len3","_key3","_scheduleOnJS","makeShareableCloneOnUIRecursive"],"sources":["threads.ts"],"sourcesContent":["import NativeReanimatedModule from './NativeReanimated';\nimport { isJest, shouldBeUseWeb } from './PlatformChecker';\nimport { ComplexWorkletFunction } from './commonTypes';\nimport {\n  makeShareableCloneOnUIRecursive,\n  makeShareableCloneRecursive,\n} from './shareables';\n\nconst IS_JEST = isJest();\nconst IS_WEB = shouldBeUseWeb();\n\nlet _runOnUIQueue: Array<[ComplexWorkletFunction<any[], any>, any[]]> = [];\n\nexport function setupMicrotasks() {\n  'worklet';\n\n  let microtasksQueue: Array<() => void> = [];\n  let isExecutingMicrotasksQueue = false;\n\n  // @ts-ignore â€“ typescript expects this to conform to NodeJS definition and expects the return value to be NodeJS.Immediate which is an object and not a number\n  global.queueMicrotask = (callback: () => void): number => {\n    microtasksQueue.push(callback);\n    return -1;\n  };\n\n  global.__callMicrotasks = () => {\n    if (isExecutingMicrotasksQueue) {\n      return;\n    }\n    try {\n      isExecutingMicrotasksQueue = true;\n      for (let index = 0; index < microtasksQueue.length; index += 1) {\n        // we use classic 'for' loop because the size of the currentTasks array may change while executing some of the callbacks due to queueMicrotask calls\n        microtasksQueue[index]();\n      }\n      microtasksQueue = [];\n      global._maybeFlushUIUpdatesQueue();\n    } finally {\n      isExecutingMicrotasksQueue = false;\n    }\n  };\n}\n\nfunction callMicrotasksOnUIThread() {\n  'worklet';\n  global.__callMicrotasks();\n}\n\nexport const callMicrotasks = shouldBeUseWeb()\n  ? () => {\n      // on web flushing is a noop as immediates are handled by the browser\n    }\n  : callMicrotasksOnUIThread;\n\n/**\n * Schedule a worklet to execute on the UI runtime. This method does not schedule the work immediately but instead\n * waits for other worklets to be scheduled within the same JS loop. It uses queueMicrotask to schedule all the worklets\n * at once making sure they will run within the same frame boundaries on the UI thread.\n */\nexport function runOnUI<A extends any[], R>(\n  worklet: ComplexWorkletFunction<A, R>\n): (...args: A) => void {\n  if (__DEV__ && !IS_WEB && worklet.__workletHash === undefined) {\n    throw new Error('runOnUI() can only be used on worklets');\n  }\n  return (...args) => {\n    if (IS_JEST) {\n      // Mocking time in Jest is tricky as both requestAnimationFrame and queueMicrotask\n      // callbacks run on the same queue and can be interleaved. There is no way\n      // to flush particular queue in Jest and the only control over mocked timers\n      // is by using jest.advanceTimersByTime() method which advances all types\n      // of timers including immediate and animation callbacks. Ideally we'd like\n      // to have some way here to schedule work along with React updates, but\n      // that's not possible, and hence in Jest environment instead of using scheduling\n      // mechanism we just schedule the work ommiting the queue. This is ok for the\n      // uses that we currently have but may not be ok for future tests that we write.\n      NativeReanimatedModule.scheduleOnUI(\n        makeShareableCloneRecursive(() => {\n          'worklet';\n          worklet(...args);\n        })\n      );\n      return;\n    }\n    if (__DEV__) {\n      // in DEV mode we call shareable conversion here because in case the object\n      // can't be converted, we will get a meaningful stack-trace as opposed to the\n      // situation when conversion is only done via microtask queue. This does not\n      // make the app particularily less efficient as converted objects are cached\n      // and for a given worklet the conversion only happens once.\n      makeShareableCloneRecursive(worklet);\n      makeShareableCloneRecursive(args);\n    }\n    _runOnUIQueue.push([worklet, args]);\n    if (_runOnUIQueue.length === 1) {\n      queueMicrotask(() => {\n        const queue = _runOnUIQueue;\n        _runOnUIQueue = [];\n        NativeReanimatedModule.scheduleOnUI(\n          makeShareableCloneRecursive(() => {\n            'worklet';\n            queue.forEach(([worklet, args]) => {\n              worklet(...args);\n            });\n            callMicrotasks();\n          })\n        );\n      });\n    }\n  };\n}\n\n/**\n * Schedule a worklet to execute on the UI runtime skipping batching mechanism.\n */\nexport function runOnUIImmediately<A extends any[], R>(\n  worklet: ComplexWorkletFunction<A, R>\n): (...args: A) => void {\n  if (__DEV__ && !IS_WEB && worklet.__workletHash === undefined) {\n    throw new Error('runOnUI() can only be used on worklets');\n  }\n  return (...args) => {\n    NativeReanimatedModule.scheduleOnUI(\n      makeShareableCloneRecursive(() => {\n        'worklet';\n        worklet(...args);\n      })\n    );\n  };\n}\n\nif (__DEV__) {\n  try {\n    runOnUI(() => {\n      'worklet';\n    });\n  } catch (e) {\n    throw new Error(\n      'Failed to create a worklet. Did you forget to add Reanimated Babel plugin in babel.config.js? See installation docs at https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/installation#babel-plugin.'\n    );\n  }\n}\n\nexport function runOnJS<A extends any[], R>(\n  fun: ComplexWorkletFunction<A, R>\n): (...args: A) => void {\n  'worklet';\n  if (fun.__remoteFunction) {\n    // in development mode the function provided as `fun` throws an error message\n    // such that when someone accidently calls it directly on the UI runtime, they\n    // see that they should use `runOnJS` instead. To facilitate that we purt the\n    // reference to the original remote function in the `__remoteFunction` property.\n    fun = fun.__remoteFunction;\n  }\n  if (!_WORKLET) {\n    return fun;\n  }\n  return (...args) => {\n    _scheduleOnJS(\n      fun,\n      args.length > 0 ? makeShareableCloneOnUIRecursive(args) : undefined\n    );\n  };\n}\n"],"mappings":"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"}