{"version":3,"names":["_react","require","_core","makeViewDescriptorsSet","sharableViewDescriptors","makeMutable","data","add","item","modify","descriptors","index","findIndex","descriptor","tag","push","remove","viewTag","splice","makeViewsRefSet","ref","useRef","current","items","Set","has","delete"],"sources":["ViewDescriptorsSet.ts"],"sourcesContent":["import { useRef } from 'react';\nimport { makeMutable } from './core';\nimport { SharedValue } from './commonTypes';\nimport { Descriptor } from './hook/commonTypes';\n\nexport interface ViewRefSet<T> {\n  items: Set<T>;\n  add: (item: T) => void;\n  remove: (item: T) => void;\n}\n\nexport interface ViewDescriptorsSet {\n  sharableViewDescriptors: SharedValue<Descriptor[]>;\n  add: (item: Descriptor) => void;\n  remove: (viewTag: number) => void;\n}\n\nexport function makeViewDescriptorsSet(): ViewDescriptorsSet {\n  const sharableViewDescriptors = makeMutable<Descriptor[]>([]);\n  const data: ViewDescriptorsSet = {\n    sharableViewDescriptors,\n    add: (item: Descriptor) => {\n      sharableViewDescriptors.modify((descriptors: Descriptor[]) => {\n        'worklet';\n        const index = descriptors.findIndex(\n          (descriptor) => descriptor.tag === item.tag\n        );\n        if (index !== -1) {\n          descriptors[index] = item;\n        } else {\n          descriptors.push(item);\n        }\n        return descriptors;\n      });\n    },\n\n    remove: (viewTag: number) => {\n      sharableViewDescriptors.modify((descriptors: Descriptor[]) => {\n        'worklet';\n        const index = descriptors.findIndex(\n          (descriptor) => descriptor.tag === viewTag\n        );\n        if (index !== -1) {\n          descriptors.splice(index, 1);\n        }\n        return descriptors;\n      });\n    },\n  };\n  return data;\n}\n\nexport function makeViewsRefSet<T>(): ViewRefSet<T> {\n  const ref = useRef<ViewRefSet<T> | null>(null);\n  if (ref.current === null) {\n    const data: ViewRefSet<T> = {\n      items: new Set(),\n\n      add: (item: T) => {\n        if (data.items.has(item)) return;\n        data.items.add(item);\n      },\n\n      remove: (item: T) => {\n        data.items.delete(item);\n      },\n    };\n    ref.current = data;\n  }\n\n  return ref.current;\n}\n"],"mappings":";;;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AACA,IAAAC,KAAA,GAAAD,OAAA;AAgBO,SAASE,sBAAsBA,CAAA,EAAuB;EAC3D,MAAMC,uBAAuB,GAAG,IAAAC,iBAAW,EAAe,EAAE,CAAC;EAC7D,MAAMC,IAAwB,GAAG;IAC/BF,uBAAuB;IACvBG,GAAG,EAAGC,IAAgB,IAAK;MACzBJ,uBAAuB,CAACK,MAAM,CAAEC,WAAyB,IAAK;QAC5D,SAAS;;QACT,MAAMC,KAAK,GAAGD,WAAW,CAACE,SAAS,CAChCC,UAAU,IAAKA,UAAU,CAACC,GAAG,KAAKN,IAAI,CAACM,GAAG,CAC5C;QACD,IAAIH,KAAK,KAAK,CAAC,CAAC,EAAE;UAChBD,WAAW,CAACC,KAAK,CAAC,GAAGH,IAAI;QAC3B,CAAC,MAAM;UACLE,WAAW,CAACK,IAAI,CAACP,IAAI,CAAC;QACxB;QACA,OAAOE,WAAW;MACpB,CAAC,CAAC;IACJ,CAAC;IAEDM,MAAM,EAAGC,OAAe,IAAK;MAC3Bb,uBAAuB,CAACK,MAAM,CAAEC,WAAyB,IAAK;QAC5D,SAAS;;QACT,MAAMC,KAAK,GAAGD,WAAW,CAACE,SAAS,CAChCC,UAAU,IAAKA,UAAU,CAACC,GAAG,KAAKG,OAAO,CAC3C;QACD,IAAIN,KAAK,KAAK,CAAC,CAAC,EAAE;UAChBD,WAAW,CAACQ,MAAM,CAACP,KAAK,EAAE,CAAC,CAAC;QAC9B;QACA,OAAOD,WAAW;MACpB,CAAC,CAAC;IACJ;EACF,CAAC;EACD,OAAOJ,IAAI;AACb;AAEO,SAASa,eAAeA,CAAA,EAAqB;EAClD,MAAMC,GAAG,GAAG,IAAAC,aAAM,EAAuB,IAAI,CAAC;EAC9C,IAAID,GAAG,CAACE,OAAO,KAAK,IAAI,EAAE;IACxB,MAAMhB,IAAmB,GAAG;MAC1BiB,KAAK,EAAE,IAAIC,GAAG,EAAE;MAEhBjB,GAAG,EAAGC,IAAO,IAAK;QAChB,IAAIF,IAAI,CAACiB,KAAK,CAACE,GAAG,CAACjB,IAAI,CAAC,EAAE;QAC1BF,IAAI,CAACiB,KAAK,CAAChB,GAAG,CAACC,IAAI,CAAC;MACtB,CAAC;MAEDQ,MAAM,EAAGR,IAAO,IAAK;QACnBF,IAAI,CAACiB,KAAK,CAACG,MAAM,CAAClB,IAAI,CAAC;MACzB;IACF,CAAC;IACDY,GAAG,CAACE,OAAO,GAAGhB,IAAI;EACpB;EAEA,OAAOc,GAAG,CAACE,OAAO;AACpB"}